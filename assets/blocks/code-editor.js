(function (wp) {
    "use strict";

    const {registerBlockType} = wp.blocks;
    const {TextareaControl, SelectControl, PanelBody} = wp.components;
    const {InspectorControls} = wp.blockEditor;
    const {__} = wp.i18n;

    let incrementId = Math.random() * 1000000;
    const languages = [
        "bash",
        "sh",
        "c",
        "h",
        "cpp",
        "cc",
        "c++",
        "h++",
        "hpp",
        "hh",
        "hxx",
        "cxx",
        "csharp",
        "cs",
        "c#",
        "css",
        "diff",
        "patch",
        "go",
        "golang",
        "graphql",
        "gql",
        "ini",
        "toml",
        "java",
        "jsp",
        "javascript",
        "js",
        "jsx",
        "mjs",
        "cjs",
        "json",
        "kotlin",
        "kt",
        "kts",
        "less",
        "lua",
        "makefile",
        "mk",
        "mak",
        "make",
        "markdown",
        "md",
        "mkdown",
        "mkd",
        "objectivec",
        "mm",
        "objc",
        "obj-c",
        "obj-c++",
        "objective-c++",
        "perl",
        "pl",
        "pm",
        "php",
        "php-template",
        "plaintext",
        "text",
        "txt",
        "python",
        "py",
        "gyp",
        "ipython",
        "python-repl",
        "pycon",
        "r",
        "ruby",
        "rb",
        "gemspec",
        "podspec",
        "thor",
        "irb",
        "rust",
        "rs",
        "scss",
        "shell",
        "console",
        "shellsession",
        "sql",
        "swift",
        "typescript",
        "ts",
        "tsx",
        "mts",
        "cts",
        "vbnet",
        "vb",
        "wasm",
        "xml",
        "html",
        "xhtml",
        "rss",
        "atom",
        "xjb",
        "xsd",
        "xsl",
        "plist",
        "wsf",
        "svg",
        "yaml",
        "yml",
        "1c",
        "abnf",
        "accesslog",
        "actionscript",
        "as",
        "ada",
        "angelscript",
        "asc",
        "apache",
        "apacheconf",
        "applescript",
        "osascript",
        "arcade",
        "arduino",
        "ino",
        "armasm",
        "arm",
        "asciidoc",
        "adoc",
        "aspectj",
        "autohotkey",
        "ahk",
        "autoit",
        "avrasm",
        "awk",
        "axapta",
        "x++",
        "basic",
        "bnf",
        "brainfuck",
        "bf",
        "cal",
        "capnproto",
        "capnp",
        "ceylon",
        "clean",
        "icl",
        "dcl",
        "clojure-repl",
        "clojure",
        "clj",
        "edn",
        "cmake",
        "cmake.in",
        "coffeescript",
        "coffee",
        "cson",
        "iced",
        "coq",
        "cos",
        "cls",
        "crmsh",
        "crm",
        "pcmk",
        "crystal",
        "cr",
        "csp",
        "d",
        "dart",
        "delphi",
        "dpr",
        "dfm",
        "pas",
        "pascal",
        "django",
        "jinja",
        "dns",
        "bind",
        "zone",
        "dockerfile",
        "docker",
        "dos",
        "bat",
        "cmd",
        "dsconfig",
        "dts",
        "dust",
        "dst",
        "ebnf",
        "elixir",
        "ex",
        "exs",
        "elm",
        "erb",
        "erlang-repl",
        "erlang",
        "erl",
        "excel",
        "xlsx",
        "xls",
        "fix",
        "flix",
        "fortran",
        "f90",
        "f95",
        "fsharp",
        "fs",
        "f#",
        "gams",
        "gms",
        "gauss",
        "gss",
        "gcode",
        "nc",
        "gherkin",
        "feature",
        "glsl",
        "gml",
        "golo",
        "gradle",
        "groovy",
        "haml",
        "handlebars",
        "hbs",
        "html.hbs",
        "html.handlebars",
        "htmlbars",
        "haskell",
        "hs",
        "haxe",
        "hx",
        "hsp",
        "http",
        "https",
        "hy",
        "hylang",
        "inform7",
        "i7",
        "irpf90",
        "isbl",
        "jboss-cli",
        "wildfly-cli",
        "julia-repl",
        "jldoctest",
        "julia",
        "lasso",
        "ls",
        "lassoscript",
        "latex",
        "tex",
        "ldif",
        "leaf",
        "lisp",
        "livecodeserver",
        "livescript",
        "llvm",
        "lsl",
        "mathematica",
        "mma",
        "wl",
        "matlab",
        "maxima",
        "mel",
        "mercury",
        "m",
        "moo",
        "mipsasm",
        "mips",
        "mizar",
        "mojolicious",
        "monkey",
        "moonscript",
        "moon",
        "n1ql",
        "nestedtext",
        "nt",
        "nginx",
        "nginxconf",
        "nim",
        "nix",
        "nixos",
        "node-repl",
        "nsis",
        "ocaml",
        "ml",
        "openscad",
        "scad",
        "oxygene",
        "parser3",
        "pf",
        "pf.conf",
        "pgsql",
        "postgres",
        "postgresql",
        "pony",
        "powershell",
        "pwsh",
        "ps",
        "ps1",
        "processing",
        "pde",
        "profile",
        "prolog",
        "properties",
        "protobuf",
        "proto",
        "puppet",
        "pp",
        "purebasic",
        "pb",
        "pbi",
        "q",
        "k",
        "kdb",
        "qml",
        "qt",
        "reasonml",
        "re",
        "rib",
        "roboconf",
        "graph",
        "instances",
        "routeros",
        "mikrotik",
        "rsl",
        "ruleslanguage",
        "sas",
        "scala",
        "scheme",
        "scm",
        "scilab",
        "sci",
        "smali",
        "smalltalk",
        "st",
        "sml",
        "sqf",
        "stan",
        "stanfuncs",
        "stata",
        "do",
        "ado",
        "step21",
        "p21",
        "step",
        "stp",
        "stylus",
        "styl",
        "subunit",
        "taggerscript",
        "tap",
        "tcl",
        "tk",
        "thrift",
        "tp",
        "twig",
        "craftcms",
        "vala",
        "vbscript-html",
        "vbscript",
        "vbs",
        "verilog",
        "v",
        "sv",
        "svh",
        "vhdl",
        "vim",
        "wren",
        "x86asm",
        "xl",
        "tao",
        "xquery",
        "xpath",
        "xq",
        "xqm",
        "zephir",
        "zep"
    ];
    const themes = [
        'a11y-dark',
        'a11y-light',
        'agate',
        'an-old-hope',
        'androidstudio',
        'arduino-light',
        'arta',
        'ascetic',
        'atom-one-dark',
        'atom-one-dark-reasonable',
        'atom-one-light',
        'brown-paper',
        'codepen-embed',
        'color-brewer',
        'dark',
        'default',
        'devibeans',
        'docco',
        'far',
        'felipec',
        'foundation',
        'github',
        'github-dark',
        'github-dark-dimmed',
        'gml',
        'googlecode',
        'gradient-dark',
        'gradient-light',
        'grayscale',
        'hybrid',
        'idea',
        'intellij-light',
        'ir-black',
        'isbl-editor-dark',
        'isbl-editor-light',
        'kimbie-dark',
        'kimbie-light',
        'lightfair',
        'lioshi',
        'magula',
        'mono-blue',
        'monokai',
        'monokai-sublime',
        'night-owl',
        'nnfx-dark',
        'nnfx-light',
        'nord',
        'obsidian',
        'panda-syntax-dark',
        'panda-syntax-light',
        'paraiso-dark',
        'paraiso-light',
        'pojoaque',
        'purebasic',
        'qtcreator-dark',
        'qtcreator-light',
        'rainbow',
        'routeros',
        'school-book',
        'shades-of-purple',
        'srcery',
        'stackoverflow-dark',
        'stackoverflow-light',
        'sunburst',
        'tokyo-night-dark',
        'tokyo-night-light',
        'tomorrow-night-blue',
        'tomorrow-night-bright',
        'vs',
        'vs2015',
        'xcode',
        'xt256'
    ];
    languages.sort();
    themes.sort();

    registerBlockType('arrayaccess-code-editor/widget', {
        title      : __('Code Editor', 'arrayaccess'),
        icon       : 'editor-code',
        category   : 'text',
        attributes : {
            content: {
                type    : 'string',
                default : ''
            },
            selectedLanguage: {
                type    : 'string',
                default : 'javascript'
            },
            selectedTheme: {
                type    : 'string',
                default : 'default'
            },
            codeJar: {
                type    : 'object',
                default : null
            }
        },
        edit: function (props) {
            const {attributes, setAttributes} = props;
            const languageOptions = languages.map((lang) => ({
                label : lang,
                value : lang
            }));

            const themeOptions = themes.map((theme) => ({
                label : theme,
                value : theme
            }));
            let codeJarInit = window.codeJarWindowInit || null;
            codeJarInit = codeJarInit ? {init: codeJarInit} : null;
            const incId = attributes.incrementId || incrementId++;
            setAttributes({incrementId: incId});
            let textArea = document.querySelector('[data-code-editor="codejar"][data-increment-id="' + (incId) + '"]');

            function callTextArea() {
                if (!codeJarInit) {
                    return;
                }
                if (!attributes.codeJar
                    || typeof attributes.codeJar.updateCode !== 'function'
                ) {
                    textArea = textArea || document.querySelector('[data-code-editor="codejar"][data-increment-id="' + (incId) + '"]');
                    codeJarInit.init(textArea, props);
                }
            }

            const textAreaElement = wp.element.createElement(TextareaControl, {
                value                       : attributes.content,
                'data-increment-id'         : incId, // To avoid conflict with other blocks
                'data-code-editor'          : 'codejar',
                'data-code-editor-theme'    : attributes.selectedTheme,
                'data-code-editor-language' : attributes.selectedLanguage,
                onChange                    : function (newContent) {
                    callTextArea();
                    setAttributes({content: newContent});
                }
            });
            callTextArea();
            return [
                wp.element.createElement(
                    InspectorControls,
                    {key: 'inspector-controls'},
                    wp.element.createElement(
                        PanelBody,
                        {
                            title       : __('Code Editor Settings', 'arrayaccess'),
                            initialOpen : true
                        },
                        [
                            wp.element.createElement(
                                SelectControl,
                                {
                                    key      : 'language-select',
                                    label    : __('Select Language', 'arrayaccess'),
                                    value    : attributes.selectedLanguage,
                                    options  : languageOptions,
                                    onChange : (newLanguage) => {
                                        setAttributes({selectedLanguage: newLanguage});
                                        if (textArea) {
                                            textArea.setAttribute('data-code-editor-language', newLanguage);
                                            codeJarInit?.init(textArea, props);
                                        }
                                    }
                                }
                            ),
                            wp.element.createElement(
                                SelectControl,
                                {
                                    key      : 'theme-select',
                                    label    : __('Select Theme', 'arrayaccess'),
                                    value    : attributes.selectedTheme,
                                    options  : themeOptions,
                                    onChange : (newTheme) => {
                                        setAttributes({selectedTheme: newTheme});
                                        if (textArea) {
                                            textArea.setAttribute('data-code-editor-theme', newTheme);
                                            codeJarInit?.init(textArea, props);
                                        }
                                    }
                                }
                            )
                        ]
                    )
                ),
                wp.element.createElement('div', null,
                    textAreaElement
                )
            ];
        },
        save: (props) => {
            const {attributes} = props;
            const maxRow = 30;
            const minRow = 2;
            let rows = attributes.content.trim().split("\n").length;
            rows = rows > maxRow ? maxRow : rows;
            rows = rows < minRow ? minRow : rows;
            const attr = {
                class                       : 'aa-code-editor aa-code-editor-' + attributes.selectedTheme,
                'data-code-editor-theme'    : attributes.selectedTheme,
                'data-code-editor-language' : attributes.selectedLanguage,
                'data-arrayaccess-widget'   : 'code-editor',
                readonly                    : 'readonly',
                rows                        : rows
            };
            return (
                wp.element.createElement('textarea', attr, attributes.content)
            );
        }
    });
})(window.wp);
